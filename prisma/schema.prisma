generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @unique @default(autoincrement())
  userName       String  @unique
  name           String  @db.VarChar(255)
  email          String  @unique
  password       String
  isVerified     Boolean @default(false)
  avatarUrl      String?
  totalPoints    Int?
  longestStreaks Int?    @default(0)

  Accounts   Accounts?
  Profile    Profile?
  challenges Challenges[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Accounts {
  id         Int   @id @default(autoincrement())
  github     Json?
  codeforces Json?
  leetcode   Json?

  // relations -
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id             Int     @id @default(autoincrement())
  bio            String?
  personalSite   String?
  twitterHandle  String?
  behanceHandle  String?
  linkedinHandle String?
  collegeName    String?
  isAlumni       Boolean @default(false)
  currCompany    String?

  // relations -
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Challenges {
  id           Int      @id @default(autoincrement())
  title        String
  type         String
  description  String
  startingDate DateTime @default(now())
  endingDate   DateTime
  taskList     Tasks[]
  points       Int      @default(0)
  streaks      Int      @default(0)
  status       STATUS   @default(ACTIVE)

  //relations -
  userId  Int
  creator User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tasks {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now())
  status  STATUS   @default(ACTIVE)
  content Json
  points  Int

  // relations -
  challengeId Int
  challenges  Challenges @relation(fields: [challengeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum STATUS {
  ACTIVE
  STALLED
  COMPLETED
}
